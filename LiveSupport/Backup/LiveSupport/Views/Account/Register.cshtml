@model LiveSupport.Models.RegisterModel

@{
    ViewBag.Title = "Register";
}

<h2>Create a New Account</h2>
<p>
    Use the form below to create a new account. 
</p>
<p>
    Passwords are required to be a minimum of @ViewBag.PasswordLength characters in length.
</p>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/digitalspaghetti.password.min.js")" type="text/javascript"></script>
<script type="text/javascript" language="javascript">
    $.validator.unobtrusive.adapters.addBool("mandatory", "required");
    $(function () {
        $("#Password").pstrength(
            { 
                'minChar': @ViewBag.PasswordLength,
                'displayMinChar': false
            }
        );
    });
</script>


@using (Html.BeginForm()) {
    @Html.ValidationSummary(true, "Account creation was unsuccessful. Please correct the errors and try again.")
    <div>
        <fieldset>
            <legend>Account Information</legend>

            <div class="editor-label">
                @Html.LabelFor(m => m.UserName)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.UserName)
                @Html.ValidationMessageFor(m => m.UserName)
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.Email). <i>Please provide real e-mail address. Important information about your account like confirmation of payments may be sent to this address</i>
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.Email)
                @Html.ValidationMessageFor(m => m.Email)
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.Password)
            </div>
            <div class="editor-field">
                @Html.PasswordFor(m => m.Password)
                @Html.ValidationMessageFor(m => m.Password)
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.ConfirmPassword)
            </div>
            <div class="editor-field">
                @Html.PasswordFor(m => m.ConfirmPassword)
                @Html.ValidationMessageFor(m => m.ConfirmPassword)
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.FullName). <i>This would be your operator's name. Don't worry - you can always change it later</i>
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.FullName)
                @Html.ValidationMessageFor(m => m.FullName)
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.CompanyName).<i>This is what your clients will see as your company name</i>
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.CompanyName)
                @Html.ValidationMessageFor(m => m.CompanyName)
            </div>
            <div class="editor-field">
                @Html.CheckBoxFor(m => m.AgreeWithTos) Check here if you agree with @Html.ActionLink("Terms of Service", "TOS", "Home", null, new { target="blank"})
                @Html.ValidationMessageFor(m => m.AgreeWithTos)
            </div>
            <div>
                @*CaptchaMVC.HtmlHelpers.CaptchaHelper.Captcha(Html,"","", 4)*@
            </div>

            <p>
                <input type="submit" value="Register" />
            </p>
        </fieldset>
    </div>
}
